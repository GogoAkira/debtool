#!/bin/bash
#
# bash completion file for debtool


_have debtool && {

_lsdebs(){
    local a=( $( compgen -f -X '.@(deb|DEB)' -X '?(*/).*' -- "$cur" ) )
    local b=( $( compgen -f -- "$cur" ) )

    if (( ${#a[@]} == ${#b[@]} )); then
        compgen -d -- "$cur"
    elif (( ${#a[@]} > 0 )); then
        printf '%s\n' "${a[@]}"
    fi
}

_debtool(){
    local cur prev

    COMPREPLY=()
    cur=${COMP_WORDS[COMP_CWORD]}
    prev=${COMP_WORDS[COMP_CWORD-1]}

    case $prev in
    -b|-br|--build|--fast|-rb|-z)
        _filedir -d
        return 0
        ;;
    -c|--combo|-d|--download|-s|--show)
        COMPREPLY=( $( _xfunc dpkg apt-cache pkgnames "$cur" 2>/dev/null ) )
        return 0
        ;;
    -r|--reinst)
        # NOTE: This will only show .deb files (no dirs) and breaks the
        #       ability to transverse directories with completion
        # COMPREPLY=( $( compgen -f -X '!*.deb' -- "$cur" ) )

        compopt -o filenames &>/dev/null
        COMPREPLY+=( $(_lsdebs) )

        return 0
        ;;
    -u|--unpack)
        # NOTE: The compgen function only show .deb files (no dirs) and breaks
        #       the ability to transverse directories with completion
        # COMPREPLY=( $( compgen -f -X '!*.deb' -- "$cur" )
        #             $( _xfunc dpkg _comp_dpkg_installed_packages "$cur" 2>/dev/null) )
        compopt -o filenames &>/dev/null
        COMPREPLY=( $( _lsdebs )
                    $( _xfunc dpkg _comp_dpkg_installed_packages "$cur" 2>/dev/null) )
        return 0
        ;;
    esac

    if [[ $cur = -* ]]; then
        COMPREPLY=( $( compgen -W '-a --auto -b --build -c --combo -d --download
                                   -f --fast -h --help -q --quiet -r --reinst -s
                                   --show --show-format -u --unpack -z' -- "$cur" ) )
    fi

}

complete -F _debtool debtool

}
